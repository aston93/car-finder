name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --watchAll=false --coverage=false --verbose
      env:
        CI: true
    
    - name: Build project
      run: npm run build

  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest httpx
    
    - name: Run tests
      run: pytest test_main.py -v --tb=short
    
    - name: Lint code
      run: |
        pip install flake8
        flake8 main.py --max-line-length=120 --ignore=E501,W503 || true

  deploy:
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: car-finder-dev
        export_default_credentials: true
    
    - name: Configure kubectl
      run: |
        gcloud container clusters get-credentials dev-gke-cluster \
          --zone=europe-west4-a \
          --project=car-finder-dev
    
    - name: Update ConfigMaps
      run: |
        kubectl apply -f k8s/backend/configmap.yaml
        kubectl apply -f k8s/frontend/configmap.yaml
    
    - name: Restart Deployments
      run: |
        kubectl rollout restart deployment/car-finder-backend
        kubectl rollout restart deployment/car-finder-frontend
    
    - name: Wait for rollout
      run: |
        kubectl rollout status deployment/car-finder-backend --timeout=180s
        kubectl rollout status deployment/car-finder-frontend --timeout=180s
    
    - name: Verify deployment
      run: |
        kubectl get pods
        kubectl get services
        echo "‚úÖ Deployment completed!"
        echo "üåê Frontend: http://34.34.95.85"
        echo "üîß Backend: http://34.12.88.58:8000"